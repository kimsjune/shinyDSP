[{"path":"http://joonkim.ca/shinyDSP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ShinyDSP authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"shinyDSP tutorial","text":"shinyDSP: Analyzing Visualizing Nanostring GeoMx DSP Data shinyDSP intuitive Shiny application designed comprehensive analysis visualization Nanostring GeoMx DSP data. Users can upload either demo custom datasets, consisting count sample annotation tables. app prompts users select variables interest, potential batch effects, confounding factors, allowing customized exploration. shinyDSP, users can create x-y scatter plots combination categorical variables apply user-defined cutoffs filter samples. app utilizes R package, standR (Liu et al. 2023), perform normalization using methods CPM, upper quartile (Q3), RUV4 (Remove Unwanted Variation). Users can visualize PCA plots generated normalization method, color-coded chosen variables batch. selecting normalization scheme, users can identify differentially expressed genes specified biological groups using limma-voom (Ritchie et al. 2015). app provides “raw” output numbers tables, generates volcano plots pairwise comparisons, displays heatmaps top differentially expressed genes. shinyDSP aims provide robust, start--finish analysis GeoMx data, producing publication-ready outputs easily customizable meet individual aesthetic preferences.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"shinyDSP tutorial","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"shinyDSP\")  # To install the development version from Github: if (!requireNamespace(\"devtools\", quietly = TRUE)) {     install.packages(\"devtools\") }  devtools::install_github(\"kimsjune/shinyDSP\")  library(shinyDSP)"},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"shinyDSP tutorial","text":"","code":"library(shinyDSP) app <- shinyDSP() # This will open a new browser tab/window. if (interactive()) shiny::runApp(app)"},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"user-interface","dir":"Articles","previous_headings":"","what":"User interface","title":"shinyDSP tutorial","text":"four main UI components: 1. nav bar nav panels appear. Setup nav panel. 2. main side bar. can set global parameters. 3. main display within nav panel. outputs appear. 4. side bar within setup nav panel. customization options appear.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"shinyDSP tutorial","text":"shinyDSP requires count annotation tables (.csv .txt format) input. tables generated DSP Data Analysis (DSPDA) software. see files formatted, click “Use demo data”, “Load data”. top 10 rows table shown main display. main side bar also updated various options.  1. can pick one variables interest. ’s common combine two variables one grouped variable. example, “genotype” “treatment” can combined “genotype_treatment”. new column annotation table automatically created. 2. batch variable. “SlideName” selected default, categorical variable provided annotation table “sample preparation batch”, etc. 3. confounding variable(s) age sex samples want include design matrix differential gene expression analysis. None selected default. demo, “disease_status” “region” selected variables interest. four groups interest selected (DKD_glomerulus, DKD_tubule, normal_tubule, normal_glomerulus). selecting “Variable(s) interest”, two new nav panels appear: “QC” “PCA”.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"qc","dir":"Articles","previous_headings":"","what":"QC","title":"shinyDSP tutorial","text":"Click “QC” nav panel create scatter plots (optionally) filter samples meeting cutoffs. 1. Pick two quantitative variables plot (optionally) filter. 2. select two variables, increase number show possible x-y plots. 3. Pick variable colour legend. “SlideName” default. 4. Pick one five colour palettes. “glasbey” default. 5. Click open. option providing minimum threshold value(s) variable (1). Lastly, click “Show QC plots” show/update plots. example , “SequencingSaturation” “DeduplicatedReads” selected. , removed samples “SequencingSaturation” 85. filtering applied based “DeduplicatedReads”. scatter plot can saved .png, .tiff, .svg .pdf clicking download buttons plot. Now move “PCA” (click nav panel).","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"pca","dir":"Articles","previous_headings":"","what":"PCA","title":"shinyDSP tutorial","text":"Click “Run” generate PCA plots. group interest batch variable selected main side bar, can pick shape colour. example, “DKD_glomerulus” appear black circles. can pick five different shapes colour grDevices::colours(). Two sets three PCA plots generated main display area. Three normalization schemes shown: CPM, Q3 (upperquartile), RUV4 (Remove Unwanted Variation). Across top buttom row, plots colour-coded “Variable(s) interest”, “batch variable”, respectively. Click “Download” side bar find download options. Select smallest value “k value RUV4 norm.” removes batch effect. Click “Run” show updated plots.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"shinyDSP tutorial","text":"Now can choose normalization scheme use differential gene expression testing log fold-change cutoff limma::topTable. Selecting normalization scheme reveal three new nav panels nav bar: “Table”, “Volcano”, “Heatmap”.  choose “RUV4”, need open “PCA” nav panel load k value.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"table","dir":"Articles","previous_headings":"","what":"Table","title":"shinyDSP tutorial","text":"Clicking “Table” nav panel automatically start performing differential gene expression testing selected “Groups interest”. two groups selected, possible pairwise comparisons ANOVA-like test groups executed. step can take 3 minutes. Results separated tabs highlighted blue. Click “Download table” button table download (.csv).","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"volcano-plots","dir":"Articles","previous_headings":"","what":"Volcano plots","title":"shinyDSP tutorial","text":"Click “Volcano” nav panel “Show/update”.  Like tables, Volcano plots shown individual tabs highlighted blue.  several customization options tweaking look feel plots. 1. Higher number increases number gene names shown allowing overlap . 2. Higher number makes labels larger. 3-4. options used colour genes meeting cutoffs “DE colour (7)”. 5. genes logFC >= “logFC cutoff” given colour. Must grDevices::color(). 6. genes logFC <= -“logFC cutoff” given colour. Must grDevices::color()“. 7. Must grDevices::color(). 8. Click enable custom x y ranges. settings applied Volcano plots. Volcano plot, option save four different file types.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"heatmap","dir":"Articles","previous_headings":"","what":"Heatmap","title":"shinyDSP tutorial","text":"“Table”, corresponding heatmap generated. heatmaps also organized individual tabs. default, top 50 genes (sorted adjusted P value) shown rows, clustered based Euclidean distances. customization options:  N top genes can plotted. viridis colour map available. custom range Z score. balanced. adjusts overall size **downloaded* heatmap. “square” become smaller/bigger. Font size row/gene labels. heatmap, option save four different file types.","code":""},{"path":"http://joonkim.ca/shinyDSP/articles/vignette.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"shinyDSP tutorial","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] BiocStyle_2.32.1 #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37       desc_1.4.3          R6_2.5.1            #>  [4] bookdown_0.41       fastmap_1.2.0       xfun_0.48           #>  [7] cachem_1.1.0        knitr_1.48          htmltools_0.5.8.1   #> [10] rmarkdown_2.28      lifecycle_1.0.4     cli_3.6.3           #> [13] sass_0.4.9          pkgdown_2.1.1       textshaping_0.4.0   #> [16] jquerylib_0.1.4     systemfonts_1.1.0   compiler_4.4.1      #> [19] tools_4.4.1         ragg_1.3.3          evaluate_1.0.1      #> [22] bslib_0.8.0         yaml_2.3.10         BiocManager_1.30.25 #> [25] jsonlite_1.8.9      rlang_1.1.4         fs_1.6.4            #> [28] htmlwidgets_1.6.4"},{"path":"http://joonkim.ca/shinyDSP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Seung J. Kim. Author, maintainer. Angwara Nilanont. Contributor. Marco Mura. Funder.","code":""},{"path":"http://joonkim.ca/shinyDSP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim S (2024). shinyDSP: Shiny App Visualizing Nanostring GeoMx DSP Data. R package version 0.99.0, http://joonkim.ca/shinyDSP/, https://kimsjune.github.com/shinyDSP.","code":"@Manual{,   title = {shinyDSP: A Shiny App For Visualizing Nanostring GeoMx DSP Data},   author = {Seung J. Kim},   year = {2024},   note = {R package version 0.99.0, http://joonkim.ca/shinyDSP/},   url = {https://kimsjune.github.com/shinyDSP}, }"},{"path":"http://joonkim.ca/shinyDSP/index.html","id":"shinydsp","dir":"","previous_headings":"","what":"A Shiny App For Visualizing Nanostring GeoMx DSP Data","title":"A Shiny App For Visualizing Nanostring GeoMx DSP Data","text":"shinyDSP Shiny app lets interactively visualize Nanostring GeoMx data. outputs highly customizable. performs differential gene expression analysis summarizes results tables plots. Please refer vignette details.","code":""},{"path":"http://joonkim.ca/shinyDSP/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Shiny App For Visualizing Nanostring GeoMx DSP Data","text":"shinyDSP available Bioconductor can installed following:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"shinyDSP\")  # To install the development version from Github: if (!requireNamespace(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")  devtools::install_github(\"kimsjune/shinyDSP\")"},{"path":"http://joonkim.ca/shinyDSP/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Shiny App For Visualizing Nanostring GeoMx DSP Data","text":"","code":"library(shinyDSP) app <- shinyDSP() if (interactive()) shiny::runApp(app)"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-PCAFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"PCA plotting function with ggplot2 — .PCAFunction","title":"PCA plotting function with ggplot2 — .PCAFunction","text":"PCA plotting function ggplot2","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-PCAFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCA plotting function with ggplot2 — .PCAFunction","text":"","code":".PCAFunction(   spe,   precomputed,   colourShapeBy,   selectedVar,   ROIshapes,   ROIcolours )"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-PCAFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCA plotting function with ggplot2 — .PCAFunction","text":"spe SpatialExperiment::SpatialExperiment output standR::readGeoMx() precomputed Output SingleCellExperiment::reducedDim() colourShapeBy input$selected_types selectedVar Either \"Type\" input$selected_batch ROIshapes User input shapes .PCA_customization() function PCA_customization_batch() ROIcolours User input colours .PCA_customization() function PCA_customization_batch()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-PCAFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCA plotting function with ggplot2 — .PCAFunction","text":"ggplot2::ggplot2 object","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-PCAFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PCA plotting function with ggplot2 — .PCAFunction","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfacePcaNavPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"PCA\" nav panel","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfacePcaNavPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":".interfacePcaNavPanel()"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfacePcaNavPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"bslib::nav_panel()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfacePcaNavPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceQcNavPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"QC\" nav panel","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceQcNavPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":".interfaceQcNavPanel()"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceQcNavPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"bslib::nav_panel()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceQcNavPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSetupNavPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"setup\" nav panel","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSetupNavPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":".interfaceSetupNavPanel()"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSetupNavPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"bslib::nav_panel()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSetupNavPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSidebar.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the ","title":"Creates the ","text":"Creates \"sidebar\" UI element","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSidebar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the ","text":"","code":".interfaceSidebar(output)"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSidebar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the ","text":"bslib::sidebar()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceSidebar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceTableNavPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"Table\" nav panel","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceTableNavPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":".interfaceTableNavPanel()"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceTableNavPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"bslib::nav_panel()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceTableNavPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceVolcanoNavPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the ","title":"Create the ","text":"Create \"Volcano\" nav panel","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceVolcanoNavPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the ","text":"","code":".interfaceVolcanoNavPanel()"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceVolcanoNavPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the ","text":"bslib::nav_panel()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-interfaceVolcanoNavPanel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create the ","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function that exposes .png assets to the Shiny package — .onAttach","title":"Helper function that exposes .png assets to the Shiny package — .onAttach","text":"Helper function exposes .png assets Shiny package","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function that exposes .png assets to the Shiny package — .onAttach","text":"","code":".onAttach(libname, pkgname)"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function that exposes .png assets to the Shiny package — .onAttach","text":"libname libname pkgname pkgname","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-onAttach.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function that exposes .png assets to the Shiny package — .onAttach","text":"shiny::addResourcePath()","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-volcanoFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot plotting function with ggplot2 — .volcanoFunction","title":"Volcano plot plotting function with ggplot2 — .volcanoFunction","text":"Volcano plot plotting function ggplot2","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-volcanoFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot plotting function with ggplot2 — .volcanoFunction","text":"","code":".volcanoFunction(   volcano,   delabSize,   maxOverlap,   title,   logFCcutoff,   PvalCutoff,   DnCol,   notDEcol,   UpCol )"},{"path":"http://joonkim.ca/shinyDSP/reference/dot-volcanoFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot plotting function with ggplot2 — .volcanoFunction","text":"volcano data.frame delabSize input$delabSize maxOverlap input$maxOverlap title Contrasts title logFCcutoff input$logFCcutoff PvalCutoff input$PvalCutoff DnCol input$DnCol. Determines colour downregulated genes. notDEcol input$notDEcol. UpCol input$UpCol. Determines colour upregulated genes.","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-volcanoFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot plotting function with ggplot2 — .volcanoFunction","text":"ggplot2::geom_point() object","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/dot-volcanoFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Volcano plot plotting function with ggplot2 — .volcanoFunction","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shinyDSP: A Shiny App For Visualizing Nanostring GeoMx DSP Data — shinyDSP-package","title":"shinyDSP: A Shiny App For Visualizing Nanostring GeoMx DSP Data — shinyDSP-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shinyDSP: A Shiny App For Visualizing Nanostring GeoMx DSP Data — shinyDSP-package","text":"Maintainer: Seung J. Kim seung.kim@lhsc..ca (ORCID) contributors: Angwara Nilanont angwara.nilanont@lhsc..ca (ORCID) [contributor] Marco Mura marco.mura@lhsc..ca [funder]","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the shiny app, ready to be loaded — shinyDSP","title":"Creates the shiny app, ready to be loaded — shinyDSP","text":"Creates shiny app, ready loaded","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the shiny app, ready to be loaded — shinyDSP","text":"","code":"shinyDSP()"},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the shiny app, ready to be loaded — shinyDSP","text":"shiny::shinyApp() object","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates the shiny app, ready to be loaded — shinyDSP","text":"Seung J. Kim","code":""},{"path":"http://joonkim.ca/shinyDSP/reference/shinyDSP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates the shiny app, ready to be loaded — shinyDSP","text":"","code":"library(shinyDSP) app <- shinyDSP() if (interactive()) {     shiny::runApp(app) }"},{"path":"http://joonkim.ca/shinyDSP/news/index.html","id":"shinydsp-0990","dir":"Changelog","previous_headings":"","what":"shinyDSP 0.99.0","title":"shinyDSP 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES main changes function foo() parameter param. BUG FIXES bug fixes. See details http://bioconductor.org/developers/package-guidelines/#news.","code":""}]
